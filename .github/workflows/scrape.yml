name: scraper
on:
  schedule:
    - cron:  '* */1 * * *' # run every hour
  workflow_dispatch: ~


jobs:
  run_scraper:
    runs-on: ubuntu-18.04
    continue-on-error: false
    timeout-minutes: 10
    strategy:
      fail-fast: false
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
    - uses: jannekem/run-python-script-action@v1
      with:
        script: |
          pip install requests
          pip install bs4
          pip install lxml
          pip install pandas
          import requests
          from bs4 import BeautifulSoup
          import lxml
          import pandas as pd
          import time

          from datetime import datetime

          url = "https://hw.zh.ch/hochwasser/mac/AktWassertemp.HTML"

          # Mit request Webseite aufrufen
          r = requests.get(url)

          # wir machen eine Suppe aus der Antwort
          soup = BeautifulSoup(r.content, 'lxml')

          dct_lst = []

          for el in soup.find_all('tr')[1:-1]:

              mydict = {}

              this_row = el.find_all('td')
              
              mydict['Gew√§sser'] =  this_row[0].text.replace("''","").strip()
              mydict['Messeinheit'] = this_row[1].text.replace("''","").strip()
              mydict['Datum']=        this_row[2].text.replace("''","").strip()
              mydict['Aktueller_Wert'] = this_row[3].text.replace("''","").strip()
              mydict['24h_vorher'] =  this_row[4].text.replace("''","").strip()
              mydict['Differenz'] =  this_row[5].text.replace("''","").strip()
              mydict['Mittel_24h'] =  this_row[6].text.replace("''","").strip()
              mydict['Maximum_24h'] = this_row[7].text.replace("''","").strip()
              mydict['Minimum_24h'] = this_row[8].text.replace("''","").strip()
              dct_lst.append(mydict)


          df = pd.DataFrame(dct_lst)   
          now = datetime.now()
          filename = now.strftime("%Y%m%d-%Hh%M")

          df.to_csv("data/temperatur_"+filename +".csv", index=False)
    - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
    - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
    - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
    - name: Check out repository code
      uses: actions/checkout@v3
    - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
    - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
    - name: List files in the repository
      run: |
        ls ${{ github.workspace }}
    - run: echo "üçè This job's status is ${{ job.status }}."
